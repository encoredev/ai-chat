package llm

import (
	"encore.app/llm/provider"
	"encore.dev/pubsub"
)

type TaskType string

const (
	TaskTypeJoin     TaskType = "join"
	TaskTypeLeave    TaskType = "leave"
	TaskTypeContinue TaskType = "continue"
	TaskTypeInstruct TaskType = "instruct"
)

type Task struct {
	Type    TaskType
	Request *provider.ChatRequest
}

// TaskTopic is a topic for tasks generated by the chat service.
// We use a topic to allow for asynchronous processing of tasks (the LLMs can be slow).
//
// This uses Encore's pubsub package, learn more: https://encore.dev/docs/primitives/pubsub
var TaskTopic = pubsub.NewTopic[*Task]("llm-task", pubsub.TopicConfig{
	DeliveryGuarantee: pubsub.AtLeastOnce,
})

// chat-sub is a subscription to the chat task topic. It handles all incoming tasks from the chat service.
//
// This uses Encore's pubsub package, learn more: https://encore.dev/docs/primitives/pubsub
var _ = pubsub.NewSubscription(
	TaskTopic, "chat-sub",
	pubsub.SubscriptionConfig[*Task]{
		Handler: pubsub.MethodHandler((*Service).ProcessTask),
	},
)

// LLMMessageTopic is a topic for messages generated by the LLM providers.
//
// This uses Encore's pubsub package, learn more: https://encore.dev/docs/primitives/pubsub
var LLMMessageTopic = pubsub.NewTopic[*BotResponse]("llm-messages", pubsub.TopicConfig{
	DeliveryGuarantee: pubsub.AtLeastOnce,
})
